name: Generate README.md

on:
  push:
    branches:
      - main

jobs:
  generate-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the main repository
        uses: actions/checkout@v3

      - name: Install Terraform
        run: |
          curl -LO https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip
          unzip terraform_1.0.0_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz python3-pip
      - name: Install Python Modules
        run: |
          pip3 install graphviz numpy==1.21.0 GitPython tqdm debugpy ipaddr
      - name: Clone Terravision Repository
        run: |
          git clone https://github.com/patrickchugh/terravision.git
          cd terravision
          chmod +x terravision
            export PATH=$PATH:$(pwd)
            
      - name: Generate Terraform Plan
        run: |
          cd infra # Asegúrate de estar en la carpeta correcta que contiene tu main.tf
          terraform init
          terraform plan -out=tfplan -var="aws_region=us-east-1" \
            -var="bucket_name=netuptinteligencianegocios" \
            -var="glue_database_name=tb_redupt_database" \
            -var="glue_crawler_name=netuptinteligencianegocios-crawler" \
            -var="lambda_function_name=s3-upload-function" \
            -var="lambda_runtime=python3.8" \
            -var="lambda_timeout=30" \
            -var="lambda_memory_size=128" \
            -var="role_name=LabRole" \
            -var="policy_name=InRol" \
            -var="role_policy_arn=arn:aws:iam::571600849867:role/LabRole"
          terraform show -json tfplan > tfplan.json
  
      # Paso 3: Ejecutar Terravision para generar el diagrama desde infra/main.tf
      - name: Run Terravision to Generate Diagram
        run: |
          cd infra
          terravision draw --source . # Ejecuta Terravision directamente en la carpeta donde se encuentra main.tf
          mv output.png ../diagram.png || mv diagram.png ../diagram.png || echo "El archivo no se generó como se esperaba"
  
      # Paso 4: Generar README.md
      - name: Generate README.md
        run: |
          echo "# Diagrama de Infraestructura" > README.md
          echo "" >> README.md
          echo "Este diagrama fue generado automáticamente a partir del archivo main.tf." >> README.md
          echo "## Diagrama de Infraestructura" >> README.md
          echo "![Diagrama de Infraestructura](diagram.png)" >> README.md
          echo "" >> README.md
          echo "## Archivos Terraform Analizados" >> README.md
          echo "- infra/main.tf" >> README.md
          echo "" >> README.md
          echo "## Recursos Utilizados" >> README.md
          echo "- S3 Bucket" >> README.md
          echo "- AWS Glue Database" >> README.md
          echo "- Glue Crawler" >> README.md
          echo "- Lambda Function" >> README.md
          echo "- IAM Role" >> README.md
  
      # Paso 5: Commit y push de los cambios generados
      - name: Commit and Push README.md y Diagrama
        run: |
          git config --local user.name "tu_usuario"
          git config --local user.email "tu_email@example.com"
          if [ -f "diagram.png" ]; then
            git add README.md diagram.png
          else
            echo "El archivo diagram.png no se generó"
            git add README.md
          fi
          git commit -m "Generar README.md y diagrama automáticamente" || echo "No hay cambios para commit"
          git push origin main # Cambia 'main' a la rama en la que estás trabajando
